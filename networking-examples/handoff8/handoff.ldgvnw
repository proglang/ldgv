-- Simple example of Label-Dependent Session Types
-- Interprets addition of two numbers

type SendInt : ! ~ssn = !Int. !Int. Unit
type SendAdd : ! ~ssn = !SendInt. !(dualof SendInt). Unit

val send2 (c: SendInt) =
    let x = ((send c) 1) in
    let y = ((send x) 42) in
    ()

val add2 (c1: dualof SendInt) =
    let <m, c2> = recv c1 in
    let <n, c3> = recv c2 in
    (m + n)

val main : Int
val main =
    let con = (accept 4000 (dualof SendAdd)) in
    let <a, con2> = recv con in
    let <b, con3> = recv con2 in
    let a1 = fork (send2 a) in
    add2 b

